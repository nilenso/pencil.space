{
"version":3,
"file":"module$node_modules$roughjs$bin$fillers$dashed_filler.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/roughjs/bin/fillers/dashed-filler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$roughjs$bin$fillers$dashed_filler\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashedFiller = void 0;\n\nvar _geometry = require(\"../geometry\");\n\nvar _scanLineHachure = require(\"./scan-line-hachure\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DashedFiller =\n/*#__PURE__*/\nfunction () {\n  function DashedFiller(helper) {\n    _classCallCheck(this, DashedFiller);\n\n    this.helper = helper;\n  }\n\n  _createClass(DashedFiller, [{\n    key: \"fillPolygon\",\n    value: function fillPolygon(points, o) {\n      var lines = (0, _scanLineHachure.polygonHachureLines)(points, o);\n      return {\n        type: 'fillSketch',\n        ops: this.dashedLine(lines, o)\n      };\n    }\n  }, {\n    key: \"dashedLine\",\n    value: function dashedLine(lines, o) {\n      var _this = this;\n\n      var offset = o.dashOffset < 0 ? o.hachureGap < 0 ? o.strokeWidth * 4 : o.hachureGap : o.dashOffset;\n      var gap = o.dashGap < 0 ? o.hachureGap < 0 ? o.strokeWidth * 4 : o.hachureGap : o.dashGap;\n      var ops = [];\n      lines.forEach(function (line) {\n        var length = (0, _geometry.lineLength)(line);\n        var count = Math.floor(length / (offset + gap));\n        var startOffset = (length + gap - count * (offset + gap)) / 2;\n        var p1 = line[0];\n        var p2 = line[1];\n\n        if (p1[0] > p2[0]) {\n          p1 = line[1];\n          p2 = line[0];\n        }\n\n        var alpha = Math.atan((p2[1] - p1[1]) / (p2[0] - p1[0]));\n\n        for (var i = 0; i < count; i++) {\n          var lstart = i * (offset + gap);\n          var lend = lstart + offset;\n          var start = [p1[0] + lstart * Math.cos(alpha) + startOffset * Math.cos(alpha), p1[1] + lstart * Math.sin(alpha) + startOffset * Math.sin(alpha)];\n          var end = [p1[0] + lend * Math.cos(alpha) + startOffset * Math.cos(alpha), p1[1] + lend * Math.sin(alpha) + startOffset * Math.sin(alpha)];\n          ops = ops.concat(_this.helper.doubleLineOps(start[0], start[1], end[0], end[1], o));\n        }\n      });\n      return ops;\n    }\n  }]);\n\n  return DashedFiller;\n}();\n\nexports.DashedFiller = DashedFiller;\n};"],
"names":["shadow$provide","global","require","module","exports","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","value","DashedFiller","_geometry","_scanLineHachure","helper","instance","TypeError","fillPolygon","points","o","lines","polygonHachureLines","type","ops","dashedLine","_this","offset","dashOffset","hachureGap","strokeWidth","gap","dashGap","forEach","line","lineLength","count","Math","floor","startOffset","p1","p2","alpha","atan","lstart","lend","start","cos","sin","end","concat","doubleLineOps"]
}
