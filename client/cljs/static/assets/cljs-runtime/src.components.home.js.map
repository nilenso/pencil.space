{"version":3,"sources":["src/components/home.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__34726","vec__34727","seq__34728","cljs.core/seq","first__34729","cljs.core/first","cljs.core/next","db","_","route","G__34730","G__34731","re-frame.core/reg-fx","cljs.core.apply","reitit.frontend.easy/push-state","p__34739","p__34740","map__34741","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","vec__34742","cljs.core.nth","cofx","name","cljs.core.assoc","js/document","cljs.core/empty?","src.sundry/random-hex-color","G__34752","G__34753","p__34756","vec__34757","clear?","color","G__34760","src.components.home/clear-canvas","src.components.home/canvas","src.components.home/nick-canvas","src.sundry/->js","src.components.home/points","G__34762","G__34763","re-frame.core/reg-sub","p__34765","map__34766","js/module$node_modules$roughjs$bin$rough.default","canvas","cljs.core.reduce","acc","v","x","x-deg","js/Math","cljs.core.rand","y-deg","y","cljs.core.conj","cljs.core.range","src.components.home/page","nick","src.sundry/<sub","p1__34773#","G__34774","src.sundry/>evt","src.sundry/->input","G__34775"],"sourcesContent":["(ns src.components.home\n  (:require [\"roughjs/bin/rough\" :default rough]\n            [re-frame.core :as re-frame]\n            [reitit.frontend.easy :as rfe]\n            [src.api]\n            [src.sundry :refer [>evt <sub\n                                ->js ->input\n                                random-hex-color]]))\n\n(declare random-color)\n(declare points)\n(declare canvas)\n(declare nick-canvas)\n(declare clear-canvas)\n\n(re-frame/reg-event-fx\n ::navigate\n (fn [db [_ & route]]\n   {::navigate! route}))\n\n(re-frame/reg-fx\n ::navigate!\n (fn [route]\n   (apply rfe/push-state route)))\n\n(re-frame/reg-event-fx\n ::nick-change\n (fn [{:keys [db] :as cofx} [_ name]]\n   {:db (assoc db\n               :nick-name name\n               :avatar (.toDataURL (.getElementById js/document\n                                                    \"nick-sine\")\n                                   \"image/jpeg,\"\n                                   0.1))\n    ::draw-sine! [(empty? name) (random-hex-color)]}))\n\n(re-frame/reg-fx\n ::draw-sine!\n (fn [[clear? color]]\n   (if clear?\n     (clear-canvas (canvas))\n     (.curve (nick-canvas)\n             (->js (points))\n             (->js {:roughness 1.2,\n                    :stroke color,\n                    :strokeWidth 5})))))\n\n(re-frame/reg-sub\n ::nick-name\n (fn [{:keys [db] :as cofx}]\n   (:nick-name db)))\n\n(defn canvas\n  []\n  (.getElementById js/document \"nick-sine\"))\n\n(defn nick-canvas\n  []\n  (.canvas rough (canvas)))\n\n(defn clear-canvas\n  [canvas]\n  (.clearRect (.getContext canvas \"2d\") 0 0 (.-width canvas) (.-height canvas)))\n\n(defn points []\n  (reduce (fn [acc v]\n            (let [x (+ 10 (* v (/ 800 20)))\n                  x-deg (* (/ (.-PI js/Math) (rand 50)) x)\n                  y-deg (* (.sin js/Math x-deg) 90)\n                  y (+ (.round js/Math y-deg) 50)]\n              (conj acc [x y])))\n          []\n          (range 0 20)))\n\n(defn page []\n  (let [nick (<sub [::nick-name])]\n    (fn []\n      [:div.row.flex-center\n       [:div.sm-4.col\n        [:h1 \"\u270f This is pencil.space\"]\n        [:div.form-group\n         [:div.row.flex-right\n          [:div.sm-4.col\n           [:label {:for \"paperInputs1\"}]\n           [:input#paperInputs1 {:placeholder \"Enter a nick name...\",\n                                 :type \"text\"\n                                 :auto-focus true\n                                 :on-change #(>evt [::nick-change (->input %)])}]]\n          [:div.sm-8.col\n           [:canvas#nick-sine {:width \"800\" :height \"100\"}]]]\n         [:button.btn-success.btn-block\n          {:on-click #(>evt [::src.api/create-game])}\n          \"Start a new game\"]]]])))\n"]}