shadow$provide.module$node_modules$roughjs$bin$fillers$dot_filler=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);
staticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,"__esModule",{value:!0});exports.DotFiller=void 0;var _geometry=require("module$node_modules$roughjs$bin$geometry"),_scanLineHachure=require("module$node_modules$roughjs$bin$fillers$scan_line_hachure");global=function(){function DotFiller(helper){if(!(this instanceof DotFiller))throw new TypeError("Cannot call a class as a function");this.helper=helper}_createClass(DotFiller,[{key:"fillPolygon",
value:function(points,o){o=Object.assign({},o,{curveStepCount:4,hachureAngle:0,roughness:1});points=(0,_scanLineHachure.polygonHachureLines)(points,o);return this.dotsOnLines(points,o)}},{key:"dotsOnLines",value:function(lines,o){var ops=[],gap=o.hachureGap;0>gap&&(gap=4*o.strokeWidth);gap=Math.max(gap,.1);var fweight=o.fillWeight;0>fweight&&(fweight=o.strokeWidth/2);var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=lines[Symbol.iterator](),_step;!(_iteratorNormalCompletion=
(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var line=_step.value,dl=(0,_geometry.lineLength)(line)/gap,count=Math.ceil(dl)-1,alpha=Math.atan((line[1][1]-line[0][1])/(line[1][0]-line[0][0]));for(lines=0;lines<count;lines++){var l=gap*(lines+1),c=[line[0][0]-l*Math.cos(alpha),line[0][1]+l*Math.sin(alpha)],cx=this.helper.randOffsetWithRange(c[0]-gap/4,c[0]+gap/4,o),cy=this.helper.randOffsetWithRange(c[1]-gap/4,c[1]+gap/4,o),el=this.helper.ellipse(cx,cy,fweight,fweight,o);ops=ops.concat(el.ops)}}}catch(err){_didIteratorError=
!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}return{type:"fillSketch",ops:ops}}}]);return DotFiller}();exports.DotFiller=global}
//# sourceMappingURL=module$node_modules$roughjs$bin$fillers$dot_filler.js.map
