shadow$provide.module$node_modules$roughjs$bin$fillers$dashed_filler=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);
staticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,"__esModule",{value:!0});exports.DashedFiller=void 0;var _geometry=require("module$node_modules$roughjs$bin$geometry"),_scanLineHachure=require("module$node_modules$roughjs$bin$fillers$scan_line_hachure");global=function(){function DashedFiller(helper){if(!(this instanceof DashedFiller))throw new TypeError("Cannot call a class as a function");this.helper=helper}_createClass(DashedFiller,[{key:"fillPolygon",
value:function(points,o){points=(0,_scanLineHachure.polygonHachureLines)(points,o);return{type:"fillSketch",ops:this.dashedLine(points,o)}}},{key:"dashedLine",value:function(lines,o){var _this=this,offset=0>o.dashOffset?0>o.hachureGap?4*o.strokeWidth:o.hachureGap:o.dashOffset,gap=0>o.dashGap?0>o.hachureGap?4*o.strokeWidth:o.hachureGap:o.dashGap,ops=[];lines.forEach(function(line){var length=(0,_geometry.lineLength)(line),count=Math.floor(length/(offset+gap));length=(length+gap-count*(offset+gap))/
2;var p1=line[0],p2=line[1];p1[0]>p2[0]&&(p1=line[1],p2=line[0]);line=Math.atan((p2[1]-p1[1])/(p2[0]-p1[0]));for(p2=0;p2<count;p2++){var lstart=p2*(offset+gap),lend=lstart+offset;lstart=[p1[0]+lstart*Math.cos(line)+length*Math.cos(line),p1[1]+lstart*Math.sin(line)+length*Math.sin(line)];lend=[p1[0]+lend*Math.cos(line)+length*Math.cos(line),p1[1]+lend*Math.sin(line)+length*Math.sin(line)];ops=ops.concat(_this.helper.doubleLineOps(lstart[0],lstart[1],lend[0],lend[1],o))}});return ops}}]);return DashedFiller}();
exports.DashedFiller=global}
//# sourceMappingURL=module$node_modules$roughjs$bin$fillers$dashed_filler.js.map
