{
"version":3,
"file":"module$node_modules$roughjs$bin$generator.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/roughjs/bin/generator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$roughjs$bin$generator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RoughGenerator = void 0;\n\nvar _core = require(\"./core\");\n\nvar _renderer = require(\"./renderer.js\");\n\nvar _math = require(\"./math\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar hasSelf = typeof self !== 'undefined';\nvar NOS = 'none';\n\nvar RoughGenerator =\n/*#__PURE__*/\nfunction () {\n  function RoughGenerator(config, surface) {\n    _classCallCheck(this, RoughGenerator);\n\n    this.defaultOptions = {\n      maxRandomnessOffset: 2,\n      roughness: 1,\n      bowing: 1,\n      stroke: '#000',\n      strokeWidth: 1,\n      curveTightness: 0,\n      curveFitting: 0.95,\n      curveStepCount: 9,\n      fillStyle: 'hachure',\n      fillWeight: -1,\n      hachureAngle: -41,\n      hachureGap: -1,\n      dashOffset: -1,\n      dashGap: -1,\n      zigzagOffset: -1,\n      seed: 0,\n      roughnessGain: 1\n    };\n    this.config = config || {};\n    this.surface = surface;\n\n    if (this.config.options) {\n      this.defaultOptions = this._options(this.config.options);\n    }\n  }\n\n  _createClass(RoughGenerator, [{\n    key: \"_options\",\n    value: function _options(options) {\n      return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n    }\n  }, {\n    key: \"_drawable\",\n    value: function _drawable(shape, sets, options) {\n      return {\n        shape: shape,\n        sets: sets || [],\n        options: options || this.defaultOptions\n      };\n    }\n  }, {\n    key: \"line\",\n    value: function line(x1, y1, x2, y2, options) {\n      var o = this._options(options);\n\n      return this._drawable('line', [(0, _renderer.line)(x1, y1, x2, y2, o)], o);\n    }\n  }, {\n    key: \"rectangle\",\n    value: function rectangle(x, y, width, height, options) {\n      var o = this._options(options);\n\n      var paths = [];\n      var outline = (0, _renderer.rectangle)(x, y, width, height, o);\n\n      if (o.fill) {\n        var points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n\n        if (o.fillStyle === 'solid') {\n          paths.push((0, _renderer.solidFillPolygon)(points, o));\n        } else {\n          paths.push((0, _renderer.patternFillPolygon)(points, o));\n        }\n      }\n\n      if (o.stroke !== NOS) {\n        paths.push(outline);\n      }\n\n      return this._drawable('rectangle', paths, o);\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(x, y, width, height, options) {\n      var o = this._options(options);\n\n      var paths = [];\n      var ellipseParams = (0, _renderer.generateEllipseParams)(width, height, o);\n      var ellipseResponse = (0, _renderer.ellipseWithParams)(x, y, o, ellipseParams);\n\n      if (o.fill) {\n        if (o.fillStyle === 'solid') {\n          var shape = (0, _renderer.ellipseWithParams)(x, y, o, ellipseParams).opset;\n          shape.type = 'fillPath';\n          paths.push(shape);\n        } else {\n          paths.push((0, _renderer.patternFillPolygon)(ellipseResponse.estimatedPoints, o));\n        }\n      }\n\n      if (o.stroke !== NOS) {\n        paths.push(ellipseResponse.opset);\n      }\n\n      return this._drawable('ellipse', paths, o);\n    }\n  }, {\n    key: \"circle\",\n    value: function circle(x, y, diameter, options) {\n      var ret = this.ellipse(x, y, diameter, diameter, options);\n      ret.shape = 'circle';\n      return ret;\n    }\n  }, {\n    key: \"linearPath\",\n    value: function linearPath(points, options) {\n      var o = this._options(options);\n\n      return this._drawable('linearPath', [(0, _renderer.linearPath)(points, false, o)], o);\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(x, y, width, height, start, stop) {\n      var closed = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      var options = arguments.length > 7 ? arguments[7] : undefined;\n\n      var o = this._options(options);\n\n      var paths = [];\n      var outline = (0, _renderer.arc)(x, y, width, height, start, stop, closed, true, o);\n\n      if (closed && o.fill) {\n        if (o.fillStyle === 'solid') {\n          var shape = (0, _renderer.arc)(x, y, width, height, start, stop, true, false, o);\n          shape.type = 'fillPath';\n          paths.push(shape);\n        } else {\n          paths.push((0, _renderer.patternFillArc)(x, y, width, height, start, stop, o));\n        }\n      }\n\n      if (o.stroke !== NOS) {\n        paths.push(outline);\n      }\n\n      return this._drawable('arc', paths, o);\n    }\n  }, {\n    key: \"curve\",\n    value: function curve(points, options) {\n      var o = this._options(options);\n\n      return this._drawable('curve', [(0, _renderer.curve)(points, o)], o);\n    }\n  }, {\n    key: \"polygon\",\n    value: function polygon(points, options) {\n      var o = this._options(options);\n\n      var paths = [];\n      var outline = (0, _renderer.linearPath)(points, true, o);\n\n      if (o.fill) {\n        if (o.fillStyle === 'solid') {\n          paths.push((0, _renderer.solidFillPolygon)(points, o));\n        } else {\n          paths.push((0, _renderer.patternFillPolygon)(points, o));\n        }\n      }\n\n      if (o.stroke !== NOS) {\n        paths.push(outline);\n      }\n\n      return this._drawable('polygon', paths, o);\n    }\n  }, {\n    key: \"path\",\n    value: function path(d, options) {\n      var o = this._options(options);\n\n      var paths = [];\n\n      if (!d) {\n        return this._drawable('path', paths, o);\n      }\n\n      var outline = (0, _renderer.svgPath)(d, o);\n\n      if (o.fill) {\n        if (o.fillStyle === 'solid') {\n          var shape = {\n            type: 'path2Dfill',\n            path: d,\n            ops: []\n          };\n          paths.push(shape);\n        } else {\n          var size = this.computePathSize(d);\n          var points = [[0, 0], [size[0], 0], [size[0], size[1]], [0, size[1]]];\n\n          var _shape = (0, _renderer.patternFillPolygon)(points, o);\n\n          _shape.type = 'path2Dpattern';\n          _shape.size = size;\n          _shape.path = d;\n          paths.push(_shape);\n        }\n      }\n\n      if (o.stroke !== NOS) {\n        paths.push(outline);\n      }\n\n      return this._drawable('path', paths, o);\n    }\n  }, {\n    key: \"computePathSize\",\n    value: function computePathSize(d) {\n      var size = [0, 0];\n\n      if (hasSelf && self.document) {\n        try {\n          var svg = self.document.createElementNS(_core.SVGNS, 'svg');\n          svg.setAttribute('width', '0');\n          svg.setAttribute('height', '0');\n          var pathNode = self.document.createElementNS(_core.SVGNS, 'path');\n          pathNode.setAttribute('d', d);\n          svg.appendChild(pathNode);\n          self.document.body.appendChild(svg);\n          var bb = pathNode.getBBox();\n\n          if (bb) {\n            size[0] = bb.width || 0;\n            size[1] = bb.height || 0;\n          }\n\n          self.document.body.removeChild(svg);\n        } catch (err) {}\n      }\n\n      var canvasSize = this.getCanvasSize();\n\n      if (!(size[0] * size[1])) {\n        size = canvasSize;\n      }\n\n      return size;\n    }\n  }, {\n    key: \"getCanvasSize\",\n    value: function getCanvasSize() {\n      var val = function val(w) {\n        if (w && _typeof(w) === 'object') {\n          if (w.baseVal && w.baseVal.value) {\n            return w.baseVal.value;\n          }\n        }\n\n        return w || 100;\n      };\n\n      if (this.surface) {\n        return [val(this.surface.width), val(this.surface.height)];\n      }\n\n      return [100, 100];\n    }\n  }, {\n    key: \"opsToPath\",\n    value: function opsToPath(drawing) {\n      var path = '';\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = drawing.ops[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          var data = item.data;\n\n          switch (item.op) {\n            case 'move':\n              path += \"M\".concat(data[0], \" \").concat(data[1], \" \");\n              break;\n\n            case 'bcurveTo':\n              path += \"C\".concat(data[0], \" \").concat(data[1], \", \").concat(data[2], \" \").concat(data[3], \", \").concat(data[4], \" \").concat(data[5], \" \");\n              break;\n\n            case 'qcurveTo':\n              path += \"Q\".concat(data[0], \" \").concat(data[1], \", \").concat(data[2], \" \").concat(data[3], \" \");\n              break;\n\n            case 'lineTo':\n              path += \"L\".concat(data[0], \" \").concat(data[1], \" \");\n              break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return path.trim();\n    }\n  }, {\n    key: \"toPaths\",\n    value: function toPaths(drawable) {\n      var sets = drawable.sets || [];\n      var o = drawable.options || this.defaultOptions;\n      var paths = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = sets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var drawing = _step2.value;\n          var path = null;\n\n          switch (drawing.type) {\n            case 'path':\n              path = {\n                d: this.opsToPath(drawing),\n                stroke: o.stroke,\n                strokeWidth: o.strokeWidth,\n                fill: NOS\n              };\n              break;\n\n            case 'fillPath':\n              path = {\n                d: this.opsToPath(drawing),\n                stroke: NOS,\n                strokeWidth: 0,\n                fill: o.fill || NOS\n              };\n              break;\n\n            case 'fillSketch':\n              path = this.fillSketch(drawing, o);\n              break;\n\n            case 'path2Dfill':\n              path = {\n                d: drawing.path || '',\n                stroke: NOS,\n                strokeWidth: 0,\n                fill: o.fill || NOS\n              };\n              break;\n\n            case 'path2Dpattern':\n              {\n                var size = drawing.size;\n                var pattern = {\n                  x: 0,\n                  y: 0,\n                  width: 1,\n                  height: 1,\n                  viewBox: \"0 0 \".concat(Math.round(size[0]), \" \").concat(Math.round(size[1])),\n                  patternUnits: 'objectBoundingBox',\n                  path: this.fillSketch(drawing, o)\n                };\n                path = {\n                  d: drawing.path,\n                  stroke: NOS,\n                  strokeWidth: 0,\n                  pattern: pattern\n                };\n                break;\n              }\n          }\n\n          if (path) {\n            paths.push(path);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return paths;\n    }\n  }, {\n    key: \"fillSketch\",\n    value: function fillSketch(drawing, o) {\n      var fweight = o.fillWeight;\n\n      if (fweight < 0) {\n        fweight = o.strokeWidth / 2;\n      }\n\n      return {\n        d: this.opsToPath(drawing),\n        stroke: o.fill || NOS,\n        strokeWidth: fweight,\n        fill: NOS\n      };\n    }\n  }], [{\n    key: \"newSeed\",\n    value: function newSeed() {\n      return (0, _math.randomSeed)();\n    }\n  }]);\n\n  return RoughGenerator;\n}();\n\nexports.RoughGenerator = RoughGenerator;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","value","RoughGenerator","_core","_renderer","_math","hasSelf","self","config","surface","instance","TypeError","defaultOptions","maxRandomnessOffset","roughness","bowing","stroke","strokeWidth","curveTightness","curveFitting","curveStepCount","fillStyle","fillWeight","hachureAngle","hachureGap","dashOffset","dashGap","zigzagOffset","seed","roughnessGain","options","_options","assign","_drawable","shape","sets","line","x1","y1","x2","y2","o","rectangle","x","y","width","height","paths","outline","fill","points","push","solidFillPolygon","patternFillPolygon","NOS","ellipse","ellipseParams","generateEllipseParams","ellipseResponse","ellipseWithParams","opset","type","estimatedPoints","circle","diameter","ret","linearPath","arc","start","stop","closed","arguments","undefined","patternFillArc","curve","polygon","path","d","svgPath","ops","size","computePathSize","_shape","document","svg","createElementNS","SVGNS","setAttribute","pathNode","appendChild","body","bb","getBBox","removeChild","err","canvasSize","getCanvasSize","val","w","baseVal","opsToPath","drawing","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","done","next","item","data","op","concat","trim","toPaths","drawable","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","fillSketch","pattern","viewBox","Math","round","patternUnits","fweight","newSeed","randomSeed"]
}
