{
"version":3,
"file":"module$node_modules$roughjs$bin$renderer.js",
"lineCount":32,
"mappings":"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",
"sources":["node_modules/roughjs/bin/renderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$roughjs$bin$renderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.line = line;\nexports.linearPath = linearPath;\nexports.polygon = polygon;\nexports.rectangle = rectangle;\nexports.curve = curve;\nexports.ellipse = ellipse;\nexports.generateEllipseParams = generateEllipseParams;\nexports.ellipseWithParams = ellipseWithParams;\nexports.arc = arc;\nexports.svgPath = svgPath;\nexports.solidFillPolygon = solidFillPolygon;\nexports.patternFillPolygon = patternFillPolygon;\nexports.patternFillArc = patternFillArc;\nexports.randOffset = randOffset;\nexports.randOffsetWithRange = randOffsetWithRange;\nexports.doubleLineOps = doubleLineOps;\n\nvar _path = require(\"./path.js\");\n\nvar _filler = require(\"./fillers/filler.js\");\n\nvar _math = require(\"./math.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar helper = {\n  randOffset: randOffset,\n  randOffsetWithRange: randOffsetWithRange,\n  ellipse: ellipse,\n  doubleLineOps: doubleLineOps\n};\n\nfunction line(x1, y1, x2, y2, o) {\n  return {\n    type: 'path',\n    ops: _doubleLine(x1, y1, x2, y2, o)\n  };\n}\n\nfunction linearPath(points, close, o) {\n  var len = (points || []).length;\n\n  if (len > 2) {\n    var ops = [];\n\n    for (var i = 0; i < len - 1; i++) {\n      ops = ops.concat(_doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n    }\n\n    if (close) {\n      ops = ops.concat(_doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n    }\n\n    return {\n      type: 'path',\n      ops: ops\n    };\n  } else if (len === 2) {\n    return line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n  }\n\n  return {\n    type: 'path',\n    ops: []\n  };\n}\n\nfunction polygon(points, o) {\n  return linearPath(points, true, o);\n}\n\nfunction rectangle(x, y, width, height, o) {\n  var points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n  return polygon(points, o);\n}\n\nfunction curve(points, o) {\n  var o1 = _curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n\n  var o2 = _curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), o);\n\n  return {\n    type: 'path',\n    ops: o1.concat(o2)\n  };\n}\n\nfunction ellipse(x, y, width, height, o) {\n  var params = generateEllipseParams(width, height, o);\n  return ellipseWithParams(x, y, o, params).opset;\n}\n\nfunction generateEllipseParams(width, height, o) {\n  var psq = Math.sqrt(Math.PI * 2 * Math.sqrt((Math.pow(width / 2, 2) + Math.pow(height / 2, 2)) / 2));\n  var stepCount = Math.max(o.curveStepCount, o.curveStepCount / Math.sqrt(200) * psq);\n  var increment = Math.PI * 2 / stepCount;\n  var rx = Math.abs(width / 2);\n  var ry = Math.abs(height / 2);\n  var curveFitRandomness = 1 - o.curveFitting;\n  rx += _offsetOpt(rx * curveFitRandomness, o);\n  ry += _offsetOpt(ry * curveFitRandomness, o);\n  return {\n    increment: increment,\n    rx: rx,\n    ry: ry\n  };\n}\n\nfunction ellipseWithParams(x, y, o, ellipseParams) {\n  var _computeEllipsePoints2 = _computeEllipsePoints(ellipseParams.increment, x, y, ellipseParams.rx, ellipseParams.ry, 1, ellipseParams.increment * _offset(0.1, _offset(0.4, 1, o), o), o),\n      _computeEllipsePoints3 = _slicedToArray(_computeEllipsePoints2, 2),\n      ap1 = _computeEllipsePoints3[0],\n      cp1 = _computeEllipsePoints3[1];\n\n  var _computeEllipsePoints4 = _computeEllipsePoints(ellipseParams.increment, x, y, ellipseParams.rx, ellipseParams.ry, 1.5, 0, o),\n      _computeEllipsePoints5 = _slicedToArray(_computeEllipsePoints4, 1),\n      ap2 = _computeEllipsePoints5[0];\n\n  var o1 = _curve(ap1, null, o);\n\n  var o2 = _curve(ap2, null, o);\n\n  return {\n    estimatedPoints: cp1,\n    opset: {\n      type: 'path',\n      ops: o1.concat(o2)\n    }\n  };\n}\n\nfunction arc(x, y, width, height, start, stop, closed, roughClosure, o) {\n  var cx = x;\n  var cy = y;\n  var rx = Math.abs(width / 2);\n  var ry = Math.abs(height / 2);\n  rx += _offsetOpt(rx * 0.01, o);\n  ry += _offsetOpt(ry * 0.01, o);\n  var strt = start;\n  var stp = stop;\n\n  while (strt < 0) {\n    strt += Math.PI * 2;\n    stp += Math.PI * 2;\n  }\n\n  if (stp - strt > Math.PI * 2) {\n    strt = 0;\n    stp = Math.PI * 2;\n  }\n\n  var ellipseInc = Math.PI * 2 / o.curveStepCount;\n  var arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n\n  var o1 = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n\n  var o2 = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n\n  var ops = o1.concat(o2);\n\n  if (closed) {\n    if (roughClosure) {\n      ops = ops.concat(_doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o));\n      ops = ops.concat(_doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n    } else {\n      ops.push({\n        op: 'lineTo',\n        data: [cx, cy]\n      });\n      ops.push({\n        op: 'lineTo',\n        data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)]\n      });\n    }\n  }\n\n  return {\n    type: 'path',\n    ops: ops\n  };\n}\n\nfunction svgPath(path, o) {\n  path = (path || '').replace(/\\n/g, ' ').replace(/(-\\s)/g, '-').replace('/(\\s\\s)/g', ' ');\n  var p = new _path.RoughPath(path);\n\n  if (o.simplification) {\n    var fitter = new _path.PathFitter(p.linearPoints, p.closed);\n    var d = fitter.fit(o.simplification);\n    p = new _path.RoughPath(d);\n  }\n\n  var ops = [];\n  var segments = p.segments || [];\n\n  for (var i = 0; i < segments.length; i++) {\n    var s = segments[i];\n    var prev = i > 0 ? segments[i - 1] : null;\n\n    var opList = _processSegment(p, s, prev, o);\n\n    if (opList && opList.length) {\n      ops = ops.concat(opList);\n    }\n  }\n\n  return {\n    type: 'path',\n    ops: ops\n  };\n} // Fills\n\n\nfunction solidFillPolygon(points, o) {\n  var ops = [];\n\n  if (points.length) {\n    var offset = o.maxRandomnessOffset || 0;\n    var len = points.length;\n\n    if (len > 2) {\n      ops.push({\n        op: 'move',\n        data: [points[0][0] + _offsetOpt(offset, o), points[0][1] + _offsetOpt(offset, o)]\n      });\n\n      for (var i = 1; i < len; i++) {\n        ops.push({\n          op: 'lineTo',\n          data: [points[i][0] + _offsetOpt(offset, o), points[i][1] + _offsetOpt(offset, o)]\n        });\n      }\n    }\n  }\n\n  return {\n    type: 'fillPath',\n    ops: ops\n  };\n}\n\nfunction patternFillPolygon(points, o) {\n  return (0, _filler.getFiller)(o, helper).fillPolygon(points, o);\n}\n\nfunction patternFillArc(x, y, width, height, start, stop, o) {\n  var cx = x;\n  var cy = y;\n  var rx = Math.abs(width / 2);\n  var ry = Math.abs(height / 2);\n  rx += _offsetOpt(rx * 0.01, o);\n  ry += _offsetOpt(ry * 0.01, o);\n  var strt = start;\n  var stp = stop;\n\n  while (strt < 0) {\n    strt += Math.PI * 2;\n    stp += Math.PI * 2;\n  }\n\n  if (stp - strt > Math.PI * 2) {\n    strt = 0;\n    stp = Math.PI * 2;\n  }\n\n  var increment = (stp - strt) / o.curveStepCount;\n  var points = [];\n\n  for (var angle = strt; angle <= stp; angle = angle + increment) {\n    points.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\n  }\n\n  points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n  points.push([cx, cy]);\n  return patternFillPolygon(points, o);\n}\n\nfunction randOffset(x, o) {\n  return _offsetOpt(x, o);\n}\n\nfunction randOffsetWithRange(min, max, o) {\n  return _offset(min, max, o);\n}\n\nfunction doubleLineOps(x1, y1, x2, y2, o) {\n  return _doubleLine(x1, y1, x2, y2, o);\n} // Private helpers\n\n\nfunction random(ops) {\n  if (!ops.randomizer) {\n    ops.randomizer = new _math.Random(ops.seed || 0);\n  }\n\n  return ops.randomizer.next();\n}\n\nfunction _offset(min, max, ops) {\n  return ops.roughness * ops.roughnessGain * (random(ops) * (max - min) + min);\n}\n\nfunction _offsetOpt(x, ops) {\n  return _offset(-x, x, ops);\n}\n\nfunction _doubleLine(x1, y1, x2, y2, o) {\n  var o1 = _line(x1, y1, x2, y2, o, true, false);\n\n  var o2 = _line(x1, y1, x2, y2, o, true, true);\n\n  return o1.concat(o2);\n}\n\nfunction _line(x1, y1, x2, y2, o, move, overlay) {\n  var lengthSq = Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2);\n  var length = Math.sqrt(lengthSq);\n\n  if (length < 200) {\n    o.roughnessGain = 1;\n  } else if (length > 500) {\n    o.roughnessGain = 0.4;\n  } else {\n    o.roughnessGain = -0.0016668 * length + 1.233334;\n  }\n\n  var offset = o.maxRandomnessOffset || 0;\n\n  if (offset * offset * 100 > lengthSq) {\n    offset = length / 10;\n  }\n\n  var halfOffset = offset / 2;\n  var divergePoint = 0.2 + random(o) * 0.2;\n  var midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n  var midDispY = o.bowing * o.maxRandomnessOffset * (x1 - x2) / 200;\n  midDispX = _offsetOpt(midDispX, o);\n  midDispY = _offsetOpt(midDispY, o);\n  var ops = [];\n\n  var randomHalf = function randomHalf() {\n    return _offsetOpt(halfOffset, o);\n  };\n\n  var randomFull = function randomFull() {\n    return _offsetOpt(offset, o);\n  };\n\n  if (move) {\n    if (overlay) {\n      ops.push({\n        op: 'move',\n        data: [x1 + randomHalf(), y1 + randomHalf()]\n      });\n    } else {\n      ops.push({\n        op: 'move',\n        data: [x1 + _offsetOpt(offset, o), y1 + _offsetOpt(offset, o)]\n      });\n    }\n  }\n\n  if (overlay) {\n    ops.push({\n      op: 'bcurveTo',\n      data: [midDispX + x1 + (x2 - x1) * divergePoint + randomHalf(), midDispY + y1 + (y2 - y1) * divergePoint + randomHalf(), midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomHalf(), midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomHalf(), x2 + randomHalf(), y2 + randomHalf()]\n    });\n  } else {\n    ops.push({\n      op: 'bcurveTo',\n      data: [midDispX + x1 + (x2 - x1) * divergePoint + randomFull(), midDispY + y1 + (y2 - y1) * divergePoint + randomFull(), midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomFull(), midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomFull(), x2 + randomFull(), y2 + randomFull()]\n    });\n  }\n\n  return ops;\n}\n\nfunction _curveWithOffset(points, offset, o) {\n  var ps = [];\n  ps.push([points[0][0] + _offsetOpt(offset, o), points[0][1] + _offsetOpt(offset, o)]);\n  ps.push([points[0][0] + _offsetOpt(offset, o), points[0][1] + _offsetOpt(offset, o)]);\n\n  for (var i = 1; i < points.length; i++) {\n    ps.push([points[i][0] + _offsetOpt(offset, o), points[i][1] + _offsetOpt(offset, o)]);\n\n    if (i === points.length - 1) {\n      ps.push([points[i][0] + _offsetOpt(offset, o), points[i][1] + _offsetOpt(offset, o)]);\n    }\n  }\n\n  return _curve(ps, null, o);\n}\n\nfunction _curve(points, closePoint, o) {\n  var len = points.length;\n  var ops = [];\n\n  if (len > 3) {\n    var b = [];\n    var s = 1 - o.curveTightness;\n    ops.push({\n      op: 'move',\n      data: [points[1][0], points[1][1]]\n    });\n\n    for (var i = 1; i + 2 < len; i++) {\n      var cachedVertArray = points[i];\n      b[0] = [cachedVertArray[0], cachedVertArray[1]];\n      b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n      b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n      b[3] = [points[i + 1][0], points[i + 1][1]];\n      ops.push({\n        op: 'bcurveTo',\n        data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]]\n      });\n    }\n\n    if (closePoint && closePoint.length === 2) {\n      var ro = o.maxRandomnessOffset;\n      ops.push({\n        op: 'lineTo',\n        data: [closePoint[0] + _offsetOpt(ro, o), closePoint[1] + _offsetOpt(ro, o)]\n      });\n    }\n  } else if (len === 3) {\n    ops.push({\n      op: 'move',\n      data: [points[1][0], points[1][1]]\n    });\n    ops.push({\n      op: 'bcurveTo',\n      data: [points[1][0], points[1][1], points[2][0], points[2][1], points[2][0], points[2][1]]\n    });\n  } else if (len === 2) {\n    ops = ops.concat(_doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n  }\n\n  return ops;\n}\n\nfunction _computeEllipsePoints(increment, cx, cy, rx, ry, offset, overlap, o) {\n  var corePoints = [];\n  var allPoints = [];\n  var radOffset = _offsetOpt(0.5, o) - Math.PI / 2;\n  allPoints.push([_offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment), _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)]);\n\n  for (var angle = radOffset; angle < Math.PI * 2 + radOffset - 0.01; angle = angle + increment) {\n    var p = [_offsetOpt(offset, o) + cx + rx * Math.cos(angle), _offsetOpt(offset, o) + cy + ry * Math.sin(angle)];\n    corePoints.push(p);\n    allPoints.push(p);\n  }\n\n  allPoints.push([_offsetOpt(offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5), _offsetOpt(offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)]);\n  allPoints.push([_offsetOpt(offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap), _offsetOpt(offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap)]);\n  allPoints.push([_offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5), _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)]);\n  return [allPoints, corePoints];\n}\n\nfunction _arc(increment, cx, cy, rx, ry, strt, stp, offset, o) {\n  var radOffset = strt + _offsetOpt(0.1, o);\n\n  var points = [];\n  points.push([_offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment), _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)]);\n\n  for (var angle = radOffset; angle <= stp; angle = angle + increment) {\n    points.push([_offsetOpt(offset, o) + cx + rx * Math.cos(angle), _offsetOpt(offset, o) + cy + ry * Math.sin(angle)]);\n  }\n\n  points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n  points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n  return _curve(points, null, o);\n}\n\nfunction _bezierTo(x1, y1, x2, y2, x, y, path, o) {\n  var ops = [];\n  var ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.5];\n  var f = [0, 0];\n\n  for (var i = 0; i < 2; i++) {\n    if (i === 0) {\n      ops.push({\n        op: 'move',\n        data: [path.x, path.y]\n      });\n    } else {\n      ops.push({\n        op: 'move',\n        data: [path.x + _offsetOpt(ros[0], o), path.y + _offsetOpt(ros[0], o)]\n      });\n    }\n\n    f = [x + _offsetOpt(ros[i], o), y + _offsetOpt(ros[i], o)];\n    ops.push({\n      op: 'bcurveTo',\n      data: [x1 + _offsetOpt(ros[i], o), y1 + _offsetOpt(ros[i], o), x2 + _offsetOpt(ros[i], o), y2 + _offsetOpt(ros[i], o), f[0], f[1]]\n    });\n  }\n\n  path.setPosition(f[0], f[1]);\n  return ops;\n}\n\nfunction _processSegment(path, seg, prevSeg, o) {\n  var ops = [];\n\n  switch (seg.key) {\n    case 'M':\n    case 'm':\n      {\n        var delta = seg.key === 'm';\n\n        if (seg.data.length >= 2) {\n          var x = +seg.data[0];\n          var y = +seg.data[1];\n\n          if (delta) {\n            x += path.x;\n            y += path.y;\n          }\n\n          var ro = 1 * (o.maxRandomnessOffset || 0);\n          x = x + _offsetOpt(ro, o);\n          y = y + _offsetOpt(ro, o);\n          path.setPosition(x, y);\n          ops.push({\n            op: 'move',\n            data: [x, y]\n          });\n        }\n\n        break;\n      }\n\n    case 'L':\n    case 'l':\n      {\n        var _delta = seg.key === 'l';\n\n        if (seg.data.length >= 2) {\n          var _x = +seg.data[0];\n\n          var _y = +seg.data[1];\n\n          if (_delta) {\n            _x += path.x;\n            _y += path.y;\n          }\n\n          ops = ops.concat(_doubleLine(path.x, path.y, _x, _y, o));\n          path.setPosition(_x, _y);\n        }\n\n        break;\n      }\n\n    case 'H':\n    case 'h':\n      {\n        var _delta2 = seg.key === 'h';\n\n        if (seg.data.length) {\n          var _x2 = +seg.data[0];\n\n          if (_delta2) {\n            _x2 += path.x;\n          }\n\n          ops = ops.concat(_doubleLine(path.x, path.y, _x2, path.y, o));\n          path.setPosition(_x2, path.y);\n        }\n\n        break;\n      }\n\n    case 'V':\n    case 'v':\n      {\n        var _delta3 = seg.key === 'v';\n\n        if (seg.data.length) {\n          var _y2 = +seg.data[0];\n\n          if (_delta3) {\n            _y2 += path.y;\n          }\n\n          ops = ops.concat(_doubleLine(path.x, path.y, path.x, _y2, o));\n          path.setPosition(path.x, _y2);\n        }\n\n        break;\n      }\n\n    case 'Z':\n    case 'z':\n      {\n        if (path.first) {\n          ops = ops.concat(_doubleLine(path.x, path.y, path.first[0], path.first[1], o));\n          path.setPosition(path.first[0], path.first[1]);\n          path.first = null;\n        }\n\n        break;\n      }\n\n    case 'C':\n    case 'c':\n      {\n        var _delta4 = seg.key === 'c';\n\n        if (seg.data.length >= 6) {\n          var x1 = +seg.data[0];\n          var y1 = +seg.data[1];\n          var x2 = +seg.data[2];\n          var y2 = +seg.data[3];\n\n          var _x3 = +seg.data[4];\n\n          var _y3 = +seg.data[5];\n\n          if (_delta4) {\n            x1 += path.x;\n            x2 += path.x;\n            _x3 += path.x;\n            y1 += path.y;\n            y2 += path.y;\n            _y3 += path.y;\n          }\n\n          var ob = _bezierTo(x1, y1, x2, y2, _x3, _y3, path, o);\n\n          ops = ops.concat(ob);\n          path.bezierReflectionPoint = [_x3 + (_x3 - x2), _y3 + (_y3 - y2)];\n        }\n\n        break;\n      }\n\n    case 'S':\n    case 's':\n      {\n        var _delta5 = seg.key === 's';\n\n        if (seg.data.length >= 4) {\n          var _x4 = +seg.data[0];\n\n          var _y4 = +seg.data[1];\n\n          var _x5 = +seg.data[2];\n\n          var _y5 = +seg.data[3];\n\n          if (_delta5) {\n            _x4 += path.x;\n            _x5 += path.x;\n            _y4 += path.y;\n            _y5 += path.y;\n          }\n\n          var _x6 = _x4;\n          var _y6 = _y4;\n          var prevKey = prevSeg ? prevSeg.key : '';\n          var ref = null;\n\n          if (prevKey === 'c' || prevKey === 'C' || prevKey === 's' || prevKey === 'S') {\n            ref = path.bezierReflectionPoint;\n          }\n\n          if (ref) {\n            _x6 = ref[0];\n            _y6 = ref[1];\n          }\n\n          var _ob = _bezierTo(_x6, _y6, _x4, _y4, _x5, _y5, path, o);\n\n          ops = ops.concat(_ob);\n          path.bezierReflectionPoint = [_x5 + (_x5 - _x4), _y5 + (_y5 - _y4)];\n        }\n\n        break;\n      }\n\n    case 'Q':\n    case 'q':\n      {\n        var _delta6 = seg.key === 'q';\n\n        if (seg.data.length >= 4) {\n          var _x7 = +seg.data[0];\n\n          var _y7 = +seg.data[1];\n\n          var _x8 = +seg.data[2];\n\n          var _y8 = +seg.data[3];\n\n          if (_delta6) {\n            _x7 += path.x;\n            _x8 += path.x;\n            _y7 += path.y;\n            _y8 += path.y;\n          }\n\n          var offset1 = 1 * (1 + o.roughness * 0.2);\n          var offset2 = 1.5 * (1 + o.roughness * 0.22);\n          ops.push({\n            op: 'move',\n            data: [path.x + _offsetOpt(offset1, o), path.y + _offsetOpt(offset1, o)]\n          });\n          var f = [_x8 + _offsetOpt(offset1, o), _y8 + _offsetOpt(offset1, o)];\n          ops.push({\n            op: 'qcurveTo',\n            data: [_x7 + _offsetOpt(offset1, o), _y7 + _offsetOpt(offset1, o), f[0], f[1]]\n          });\n          ops.push({\n            op: 'move',\n            data: [path.x + _offsetOpt(offset2, o), path.y + _offsetOpt(offset2, o)]\n          });\n          f = [_x8 + _offsetOpt(offset2, o), _y8 + _offsetOpt(offset2, o)];\n          ops.push({\n            op: 'qcurveTo',\n            data: [_x7 + _offsetOpt(offset2, o), _y7 + _offsetOpt(offset2, o), f[0], f[1]]\n          });\n          path.setPosition(f[0], f[1]);\n          path.quadReflectionPoint = [_x8 + (_x8 - _x7), _y8 + (_y8 - _y7)];\n        }\n\n        break;\n      }\n\n    case 'T':\n    case 't':\n      {\n        var _delta7 = seg.key === 't';\n\n        if (seg.data.length >= 2) {\n          var _x9 = +seg.data[0];\n\n          var _y9 = +seg.data[1];\n\n          if (_delta7) {\n            _x9 += path.x;\n            _y9 += path.y;\n          }\n\n          var _x10 = _x9;\n          var _y10 = _y9;\n\n          var _prevKey = prevSeg ? prevSeg.key : '';\n\n          var _ref = null;\n\n          if (_prevKey === 'q' || _prevKey === 'Q' || _prevKey === 't' || _prevKey === 'T') {\n            _ref = path.quadReflectionPoint;\n          }\n\n          if (_ref) {\n            _x10 = _ref[0];\n            _y10 = _ref[1];\n          }\n\n          var _offset2 = 1 * (1 + o.roughness * 0.2);\n\n          var _offset3 = 1.5 * (1 + o.roughness * 0.22);\n\n          ops.push({\n            op: 'move',\n            data: [path.x + _offsetOpt(_offset2, o), path.y + _offsetOpt(_offset2, o)]\n          });\n          var _f = [_x9 + _offsetOpt(_offset2, o), _y9 + _offsetOpt(_offset2, o)];\n          ops.push({\n            op: 'qcurveTo',\n            data: [_x10 + _offsetOpt(_offset2, o), _y10 + _offsetOpt(_offset2, o), _f[0], _f[1]]\n          });\n          ops.push({\n            op: 'move',\n            data: [path.x + _offsetOpt(_offset3, o), path.y + _offsetOpt(_offset3, o)]\n          });\n          _f = [_x9 + _offsetOpt(_offset3, o), _y9 + _offsetOpt(_offset3, o)];\n          ops.push({\n            op: 'qcurveTo',\n            data: [_x10 + _offsetOpt(_offset3, o), _y10 + _offsetOpt(_offset3, o), _f[0], _f[1]]\n          });\n          path.setPosition(_f[0], _f[1]);\n          path.quadReflectionPoint = [_x9 + (_x9 - _x10), _y9 + (_y9 - _y10)];\n        }\n\n        break;\n      }\n\n    case 'A':\n    case 'a':\n      {\n        var _delta8 = seg.key === 'a';\n\n        if (seg.data.length >= 7) {\n          var rx = +seg.data[0];\n          var ry = +seg.data[1];\n          var angle = +seg.data[2];\n          var largeArcFlag = +seg.data[3];\n          var sweepFlag = +seg.data[4];\n\n          var _x11 = +seg.data[5];\n\n          var _y11 = +seg.data[6];\n\n          if (_delta8) {\n            _x11 += path.x;\n            _y11 += path.y;\n          }\n\n          if (_x11 === path.x && _y11 === path.y) {\n            break;\n          }\n\n          if (rx === 0 || ry === 0) {\n            ops = ops.concat(_doubleLine(path.x, path.y, _x11, _y11, o));\n            path.setPosition(_x11, _y11);\n          } else {\n            for (var i = 0; i < 1; i++) {\n              var arcConverter = new _path.RoughArcConverter([path.x, path.y], [_x11, _y11], [rx, ry], angle, largeArcFlag ? true : false, sweepFlag ? true : false);\n              var segment = arcConverter.getNextSegment();\n\n              while (segment) {\n                var _ob2 = _bezierTo(segment.cp1[0], segment.cp1[1], segment.cp2[0], segment.cp2[1], segment.to[0], segment.to[1], path, o);\n\n                ops = ops.concat(_ob2);\n                segment = arcConverter.getNextSegment();\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n    default:\n      break;\n  }\n\n  return ops;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","done","next","push","value","length","err","TypeError","line","x1","y1","x2","y2","o","type","ops","_doubleLine","linearPath","points","close","len","concat","polygon","ellipse","x","y","width","height","params","generateEllipseParams","ellipseWithParams","opset","increment","Math","PI","max","stepCount","curveStepCount","sqrt","psq","pow","rx","abs","ry","curveFitRandomness","curveFitting","_offsetOpt","ellipseParams","_computeEllipsePoints2","_computeEllipsePoints","_offset","_computeEllipsePoints3","ap1","cp1","_computeEllipsePoints4","ap2","_computeEllipsePoints5","o1","_curve","o2","estimatedPoints","patternFillPolygon","_filler","getFiller","helper","fillPolygon","randOffset","randOffsetWithRange","min","doubleLineOps","random","randomizer","_math","Random","seed","roughness","roughnessGain","_line","move","overlay","lengthSq","offset","maxRandomnessOffset","halfOffset","divergePoint","midDispX","bowing","midDispY","randomHalf","op","data","_curveWithOffset","ps","closePoint","b","s","curveTightness","cachedVertArray","ro","cx","cy","overlap","corePoints","allPoints","radOffset","cos","sin","angle","p","_arc","strt","stp","_bezierTo","path","ros","f","setPosition","defineProperty","rectangle","curve","arc","start","stop","closed","roughClosure","arcInc","svgPath","replace","_path","RoughPath","simplification","d","fit","fitter","PathFitter","linearPoints","segments","prev","seg","key","delta","_delta","_x","_y","_delta2","_x2","_delta3","_y2","first","_delta4","_x3","_y3","ob","bezierReflectionPoint","_delta5","_x4","_y4","_x5","_y5","_x6","_y6","prevKey","prevSeg","ref","_ob","_delta6","_x7","_y7","_x8","_y8","offset1","offset2","quadReflectionPoint","_delta7","_x9","_y9","_x10","_y10","_prevKey","_ref","_offset2","_offset3","_f","_delta8","largeArcFlag","sweepFlag","_x11","_y11","arcConverter","RoughArcConverter","segment","getNextSegment","_ob2","cp2","to","opList","solidFillPolygon","patternFillArc"]
}
